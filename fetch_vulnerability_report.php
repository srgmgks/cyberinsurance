<?php
// Database connection
$servername = "localhost"; // Assuming the database is hosted locally
$username_db = "root"; // Your MySQL username
$password_db = "root"; // Your MySQL password
$dbname = "insurance"; // Your database name

// Create connection
$conn = new mysqli($servername, $username_db, $password_db, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch "no" questions from the cyber_insurance_application table
$sql = "SELECT * FROM cyber_insurance_application WHERE 'no' IN (
        data_protection_policy, employee_compliance, compliance_check, safe_harbor, 
        data_protection_officer, firewall, anti_virus, network_weakness, monitor_breaches, 
        physical_security, payment_processing, encryption_requirements, backup_mission_critical, 
        backup_data_assets, background_checks, remote_authentication, outsourcing, 
        data_outsourcing, data_protection_insurance, indemnification, outsourcers_compliance, 
        investigation_audit, subject_access_request, enforcement_notice, potential_claim
    )";

$result = $conn->query($sql);
$vulnerabilities = "";

if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
        $vulnerabilities .= "Name = " . $row["name"] . "\n\n";
        // Initialize an array to store column names
        $columnNames = array();
        // Collect column names for "no" values
        foreach ($row as $key => $value) {
            if ($value == 'no') {
                // Add column name to the array
                $columnNames[] = ucfirst(str_replace('_', ' ', $key));
            }
        }
        // Concatenate column names with commas and add them to the vulnerabilities string
        $vulnerabilities .= implode(', ', $columnNames) . "\n\n";
    }
} else {
    $vulnerabilities = "No vulnerabilities found.";
}

$conn->close();

echo $vulnerabilities;
?>

